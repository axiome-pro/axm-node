// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package votev1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_1_list)(nil)

type _GenesisState_1_list struct {
	list *[]string
}

func (x *_GenesisState_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GenesisState_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field Government as it is not of Message kind"))
}

func (x *_GenesisState_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GenesisState_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]string
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field Agreed as it is not of Message kind"))
}

func (x *_GenesisState_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_6_list)(nil)

type _GenesisState_6_list struct {
	list *[]string
}

func (x *_GenesisState_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_GenesisState_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field Disagreed as it is not of Message kind"))
}

func (x *_GenesisState_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_GenesisState_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_7_list)(nil)

type _GenesisState_7_list struct {
	list *[]*ProposalHistoryRecord
}

func (x *_GenesisState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProposalHistoryRecord)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProposalHistoryRecord)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_7_list) AppendMutable() protoreflect.Value {
	v := new(ProposalHistoryRecord)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_7_list) NewElement() protoreflect.Value {
	v := new(ProposalHistoryRecord)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_9_list)(nil)

type _GenesisState_9_list struct {
	list *[]*PollAnswer
}

func (x *_GenesisState_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PollAnswer)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PollAnswer)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_9_list) AppendMutable() protoreflect.Value {
	v := new(PollAnswer)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_9_list) NewElement() protoreflect.Value {
	v := new(PollAnswer)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*PollHistoryItem
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PollHistoryItem)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PollHistoryItem)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(PollHistoryItem)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(PollHistoryItem)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                  protoreflect.MessageDescriptor
	fd_GenesisState_government       protoreflect.FieldDescriptor
	fd_GenesisState_params           protoreflect.FieldDescriptor
	fd_GenesisState_current_proposal protoreflect.FieldDescriptor
	fd_GenesisState_start_block      protoreflect.FieldDescriptor
	fd_GenesisState_agreed           protoreflect.FieldDescriptor
	fd_GenesisState_disagreed        protoreflect.FieldDescriptor
	fd_GenesisState_history          protoreflect.FieldDescriptor
	fd_GenesisState_current_poll     protoreflect.FieldDescriptor
	fd_GenesisState_poll_answers     protoreflect.FieldDescriptor
	fd_GenesisState_poll_history     protoreflect.FieldDescriptor
)

func init() {
	file_axiome_vote_v1beta1_genesis_proto_init()
	md_GenesisState = File_axiome_vote_v1beta1_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_government = md_GenesisState.Fields().ByName("government")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_current_proposal = md_GenesisState.Fields().ByName("current_proposal")
	fd_GenesisState_start_block = md_GenesisState.Fields().ByName("start_block")
	fd_GenesisState_agreed = md_GenesisState.Fields().ByName("agreed")
	fd_GenesisState_disagreed = md_GenesisState.Fields().ByName("disagreed")
	fd_GenesisState_history = md_GenesisState.Fields().ByName("history")
	fd_GenesisState_current_poll = md_GenesisState.Fields().ByName("current_poll")
	fd_GenesisState_poll_answers = md_GenesisState.Fields().ByName("poll_answers")
	fd_GenesisState_poll_history = md_GenesisState.Fields().ByName("poll_history")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_axiome_vote_v1beta1_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Government) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_1_list{list: &x.Government})
		if !f(fd_GenesisState_government, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if x.CurrentProposal != nil {
		value := protoreflect.ValueOfMessage(x.CurrentProposal.ProtoReflect())
		if !f(fd_GenesisState_current_proposal, value) {
			return
		}
	}
	if x.StartBlock != int64(0) {
		value := protoreflect.ValueOfInt64(x.StartBlock)
		if !f(fd_GenesisState_start_block, value) {
			return
		}
	}
	if len(x.Agreed) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.Agreed})
		if !f(fd_GenesisState_agreed, value) {
			return
		}
	}
	if len(x.Disagreed) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_6_list{list: &x.Disagreed})
		if !f(fd_GenesisState_disagreed, value) {
			return
		}
	}
	if len(x.History) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_7_list{list: &x.History})
		if !f(fd_GenesisState_history, value) {
			return
		}
	}
	if x.CurrentPoll != nil {
		value := protoreflect.ValueOfMessage(x.CurrentPoll.ProtoReflect())
		if !f(fd_GenesisState_current_poll, value) {
			return
		}
	}
	if len(x.PollAnswers) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_9_list{list: &x.PollAnswers})
		if !f(fd_GenesisState_poll_answers, value) {
			return
		}
	}
	if len(x.PollHistory) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.PollHistory})
		if !f(fd_GenesisState_poll_history, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		return len(x.Government) != 0
	case "axiome.vote.v1beta1.GenesisState.params":
		return x.Params != nil
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		return x.CurrentProposal != nil
	case "axiome.vote.v1beta1.GenesisState.start_block":
		return x.StartBlock != int64(0)
	case "axiome.vote.v1beta1.GenesisState.agreed":
		return len(x.Agreed) != 0
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		return len(x.Disagreed) != 0
	case "axiome.vote.v1beta1.GenesisState.history":
		return len(x.History) != 0
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		return x.CurrentPoll != nil
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		return len(x.PollAnswers) != 0
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		return len(x.PollHistory) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		x.Government = nil
	case "axiome.vote.v1beta1.GenesisState.params":
		x.Params = nil
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		x.CurrentProposal = nil
	case "axiome.vote.v1beta1.GenesisState.start_block":
		x.StartBlock = int64(0)
	case "axiome.vote.v1beta1.GenesisState.agreed":
		x.Agreed = nil
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		x.Disagreed = nil
	case "axiome.vote.v1beta1.GenesisState.history":
		x.History = nil
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		x.CurrentPoll = nil
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		x.PollAnswers = nil
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		x.PollHistory = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		if len(x.Government) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_1_list{})
		}
		listValue := &_GenesisState_1_list{list: &x.Government}
		return protoreflect.ValueOfList(listValue)
	case "axiome.vote.v1beta1.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		value := x.CurrentProposal
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.start_block":
		value := x.StartBlock
		return protoreflect.ValueOfInt64(value)
	case "axiome.vote.v1beta1.GenesisState.agreed":
		if len(x.Agreed) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.Agreed}
		return protoreflect.ValueOfList(listValue)
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		if len(x.Disagreed) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_6_list{})
		}
		listValue := &_GenesisState_6_list{list: &x.Disagreed}
		return protoreflect.ValueOfList(listValue)
	case "axiome.vote.v1beta1.GenesisState.history":
		if len(x.History) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_7_list{})
		}
		listValue := &_GenesisState_7_list{list: &x.History}
		return protoreflect.ValueOfList(listValue)
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		value := x.CurrentPoll
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		if len(x.PollAnswers) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_9_list{})
		}
		listValue := &_GenesisState_9_list{list: &x.PollAnswers}
		return protoreflect.ValueOfList(listValue)
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		if len(x.PollHistory) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.PollHistory}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		lv := value.List()
		clv := lv.(*_GenesisState_1_list)
		x.Government = *clv.list
	case "axiome.vote.v1beta1.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		x.CurrentProposal = value.Message().Interface().(*Proposal)
	case "axiome.vote.v1beta1.GenesisState.start_block":
		x.StartBlock = value.Int()
	case "axiome.vote.v1beta1.GenesisState.agreed":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.Agreed = *clv.list
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		lv := value.List()
		clv := lv.(*_GenesisState_6_list)
		x.Disagreed = *clv.list
	case "axiome.vote.v1beta1.GenesisState.history":
		lv := value.List()
		clv := lv.(*_GenesisState_7_list)
		x.History = *clv.list
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		x.CurrentPoll = value.Message().Interface().(*Poll)
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		lv := value.List()
		clv := lv.(*_GenesisState_9_list)
		x.PollAnswers = *clv.list
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.PollHistory = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		if x.Government == nil {
			x.Government = []string{}
		}
		value := &_GenesisState_1_list{list: &x.Government}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		if x.CurrentProposal == nil {
			x.CurrentProposal = new(Proposal)
		}
		return protoreflect.ValueOfMessage(x.CurrentProposal.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.agreed":
		if x.Agreed == nil {
			x.Agreed = []string{}
		}
		value := &_GenesisState_5_list{list: &x.Agreed}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		if x.Disagreed == nil {
			x.Disagreed = []string{}
		}
		value := &_GenesisState_6_list{list: &x.Disagreed}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.history":
		if x.History == nil {
			x.History = []*ProposalHistoryRecord{}
		}
		value := &_GenesisState_7_list{list: &x.History}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		if x.CurrentPoll == nil {
			x.CurrentPoll = new(Poll)
		}
		return protoreflect.ValueOfMessage(x.CurrentPoll.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		if x.PollAnswers == nil {
			x.PollAnswers = []*PollAnswer{}
		}
		value := &_GenesisState_9_list{list: &x.PollAnswers}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		if x.PollHistory == nil {
			x.PollHistory = []*PollHistoryItem{}
		}
		value := &_GenesisState_10_list{list: &x.PollHistory}
		return protoreflect.ValueOfList(value)
	case "axiome.vote.v1beta1.GenesisState.start_block":
		panic(fmt.Errorf("field start_block of message axiome.vote.v1beta1.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.GenesisState.government":
		list := []string{}
		return protoreflect.ValueOfList(&_GenesisState_1_list{list: &list})
	case "axiome.vote.v1beta1.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.current_proposal":
		m := new(Proposal)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.start_block":
		return protoreflect.ValueOfInt64(int64(0))
	case "axiome.vote.v1beta1.GenesisState.agreed":
		list := []string{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "axiome.vote.v1beta1.GenesisState.disagreed":
		list := []string{}
		return protoreflect.ValueOfList(&_GenesisState_6_list{list: &list})
	case "axiome.vote.v1beta1.GenesisState.history":
		list := []*ProposalHistoryRecord{}
		return protoreflect.ValueOfList(&_GenesisState_7_list{list: &list})
	case "axiome.vote.v1beta1.GenesisState.current_poll":
		m := new(Poll)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "axiome.vote.v1beta1.GenesisState.poll_answers":
		list := []*PollAnswer{}
		return protoreflect.ValueOfList(&_GenesisState_9_list{list: &list})
	case "axiome.vote.v1beta1.GenesisState.poll_history":
		list := []*PollHistoryItem{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.GenesisState"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in axiome.vote.v1beta1.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Government) > 0 {
			for _, s := range x.Government {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CurrentProposal != nil {
			l = options.Size(x.CurrentProposal)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.StartBlock))
		}
		if len(x.Agreed) > 0 {
			for _, s := range x.Agreed {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Disagreed) > 0 {
			for _, s := range x.Disagreed {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.History) > 0 {
			for _, e := range x.History {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CurrentPoll != nil {
			l = options.Size(x.CurrentPoll)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.PollAnswers) > 0 {
			for _, e := range x.PollAnswers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PollHistory) > 0 {
			for _, e := range x.PollHistory {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PollHistory) > 0 {
			for iNdEx := len(x.PollHistory) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PollHistory[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.PollAnswers) > 0 {
			for iNdEx := len(x.PollAnswers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PollAnswers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.CurrentPoll != nil {
			encoded, err := options.Marshal(x.CurrentPoll)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.History) > 0 {
			for iNdEx := len(x.History) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.History[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.Disagreed) > 0 {
			for iNdEx := len(x.Disagreed) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Disagreed[iNdEx])
				copy(dAtA[i:], x.Disagreed[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Disagreed[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Agreed) > 0 {
			for iNdEx := len(x.Agreed) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Agreed[iNdEx])
				copy(dAtA[i:], x.Agreed[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Agreed[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.StartBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartBlock))
			i--
			dAtA[i] = 0x20
		}
		if x.CurrentProposal != nil {
			encoded, err := options.Marshal(x.CurrentProposal)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Government) > 0 {
			for iNdEx := len(x.Government) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Government[iNdEx])
				copy(dAtA[i:], x.Government[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Government[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Government", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Government = append(x.Government, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentProposal", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CurrentProposal == nil {
					x.CurrentProposal = &Proposal{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrentProposal); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
				}
				x.StartBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartBlock |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Agreed", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Agreed = append(x.Agreed, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Disagreed", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Disagreed = append(x.Disagreed, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field History", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.History = append(x.History, &ProposalHistoryRecord{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.History[len(x.History)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentPoll", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CurrentPoll == nil {
					x.CurrentPoll = &Poll{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrentPoll); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PollAnswers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PollAnswers = append(x.PollAnswers, &PollAnswer{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PollAnswers[len(x.PollAnswers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PollHistory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PollHistory = append(x.PollHistory, &PollHistoryItem{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PollHistory[len(x.PollHistory)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PollAnswer     protoreflect.MessageDescriptor
	fd_PollAnswer_acc protoreflect.FieldDescriptor
	fd_PollAnswer_ans protoreflect.FieldDescriptor
)

func init() {
	file_axiome_vote_v1beta1_genesis_proto_init()
	md_PollAnswer = File_axiome_vote_v1beta1_genesis_proto.Messages().ByName("PollAnswer")
	fd_PollAnswer_acc = md_PollAnswer.Fields().ByName("acc")
	fd_PollAnswer_ans = md_PollAnswer.Fields().ByName("ans")
}

var _ protoreflect.Message = (*fastReflection_PollAnswer)(nil)

type fastReflection_PollAnswer PollAnswer

func (x *PollAnswer) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PollAnswer)(x)
}

func (x *PollAnswer) slowProtoReflect() protoreflect.Message {
	mi := &file_axiome_vote_v1beta1_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PollAnswer_messageType fastReflection_PollAnswer_messageType
var _ protoreflect.MessageType = fastReflection_PollAnswer_messageType{}

type fastReflection_PollAnswer_messageType struct{}

func (x fastReflection_PollAnswer_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PollAnswer)(nil)
}
func (x fastReflection_PollAnswer_messageType) New() protoreflect.Message {
	return new(fastReflection_PollAnswer)
}
func (x fastReflection_PollAnswer_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PollAnswer
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PollAnswer) Descriptor() protoreflect.MessageDescriptor {
	return md_PollAnswer
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PollAnswer) Type() protoreflect.MessageType {
	return _fastReflection_PollAnswer_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PollAnswer) New() protoreflect.Message {
	return new(fastReflection_PollAnswer)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PollAnswer) Interface() protoreflect.ProtoMessage {
	return (*PollAnswer)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PollAnswer) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Acc != "" {
		value := protoreflect.ValueOfString(x.Acc)
		if !f(fd_PollAnswer_acc, value) {
			return
		}
	}
	if x.Ans != false {
		value := protoreflect.ValueOfBool(x.Ans)
		if !f(fd_PollAnswer_ans, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PollAnswer) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		return x.Acc != ""
	case "axiome.vote.v1beta1.PollAnswer.ans":
		return x.Ans != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PollAnswer) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		x.Acc = ""
	case "axiome.vote.v1beta1.PollAnswer.ans":
		x.Ans = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PollAnswer) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		value := x.Acc
		return protoreflect.ValueOfString(value)
	case "axiome.vote.v1beta1.PollAnswer.ans":
		value := x.Ans
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PollAnswer) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		x.Acc = value.Interface().(string)
	case "axiome.vote.v1beta1.PollAnswer.ans":
		x.Ans = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PollAnswer) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		panic(fmt.Errorf("field acc of message axiome.vote.v1beta1.PollAnswer is not mutable"))
	case "axiome.vote.v1beta1.PollAnswer.ans":
		panic(fmt.Errorf("field ans of message axiome.vote.v1beta1.PollAnswer is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PollAnswer) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "axiome.vote.v1beta1.PollAnswer.acc":
		return protoreflect.ValueOfString("")
	case "axiome.vote.v1beta1.PollAnswer.ans":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: axiome.vote.v1beta1.PollAnswer"))
		}
		panic(fmt.Errorf("message axiome.vote.v1beta1.PollAnswer does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PollAnswer) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in axiome.vote.v1beta1.PollAnswer", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PollAnswer) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PollAnswer) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PollAnswer) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PollAnswer) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PollAnswer)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Acc)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Ans {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PollAnswer)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Ans {
			i--
			if x.Ans {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.Acc) > 0 {
			i -= len(x.Acc)
			copy(dAtA[i:], x.Acc)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Acc)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PollAnswer)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PollAnswer: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PollAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Acc", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Acc = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Ans", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Ans = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: axiome/vote/v1beta1/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState - all vote state that must be provided at genesis
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Government      []string                 `protobuf:"bytes,1,rep,name=government,proto3" json:"government,omitempty"`
	Params          *Params                  `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	CurrentProposal *Proposal                `protobuf:"bytes,3,opt,name=current_proposal,json=currentProposal,proto3" json:"current_proposal,omitempty"`
	StartBlock      int64                    `protobuf:"varint,4,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	Agreed          []string                 `protobuf:"bytes,5,rep,name=agreed,proto3" json:"agreed,omitempty"`
	Disagreed       []string                 `protobuf:"bytes,6,rep,name=disagreed,proto3" json:"disagreed,omitempty"`
	History         []*ProposalHistoryRecord `protobuf:"bytes,7,rep,name=history,proto3" json:"history,omitempty"`
	CurrentPoll     *Poll                    `protobuf:"bytes,8,opt,name=current_poll,json=currentPoll,proto3" json:"current_poll,omitempty"`
	PollAnswers     []*PollAnswer            `protobuf:"bytes,9,rep,name=poll_answers,json=pollAnswers,proto3" json:"poll_answers,omitempty"`
	PollHistory     []*PollHistoryItem       `protobuf:"bytes,10,rep,name=poll_history,json=pollHistory,proto3" json:"poll_history,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_axiome_vote_v1beta1_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_axiome_vote_v1beta1_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetGovernment() []string {
	if x != nil {
		return x.Government
	}
	return nil
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetCurrentProposal() *Proposal {
	if x != nil {
		return x.CurrentProposal
	}
	return nil
}

func (x *GenesisState) GetStartBlock() int64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *GenesisState) GetAgreed() []string {
	if x != nil {
		return x.Agreed
	}
	return nil
}

func (x *GenesisState) GetDisagreed() []string {
	if x != nil {
		return x.Disagreed
	}
	return nil
}

func (x *GenesisState) GetHistory() []*ProposalHistoryRecord {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GenesisState) GetCurrentPoll() *Poll {
	if x != nil {
		return x.CurrentPoll
	}
	return nil
}

func (x *GenesisState) GetPollAnswers() []*PollAnswer {
	if x != nil {
		return x.PollAnswers
	}
	return nil
}

func (x *GenesisState) GetPollHistory() []*PollHistoryItem {
	if x != nil {
		return x.PollHistory
	}
	return nil
}

type PollAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acc string `protobuf:"bytes,1,opt,name=acc,proto3" json:"acc,omitempty"`
	Ans bool   `protobuf:"varint,2,opt,name=ans,proto3" json:"ans,omitempty"`
}

func (x *PollAnswer) Reset() {
	*x = PollAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_axiome_vote_v1beta1_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollAnswer) ProtoMessage() {}

// Deprecated: Use PollAnswer.ProtoReflect.Descriptor instead.
func (*PollAnswer) Descriptor() ([]byte, []int) {
	return file_axiome_vote_v1beta1_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *PollAnswer) GetAcc() string {
	if x != nil {
		return x.Acc
	}
	return ""
}

func (x *PollAnswer) GetAns() bool {
	if x != nil {
		return x.Ans
	}
	return false
}

var File_axiome_vote_v1beta1_genesis_proto protoreflect.FileDescriptor

var file_axiome_vote_v1beta1_genesis_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x76, 0x6f, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc3, 0x08, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x23, 0xea, 0xde, 0x1f, 0x0a, 0x67, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65,
	0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x42, 0x1f, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x91, 0x01,
	0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d,
	0x65, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x47, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f,
	0x1a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x21, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x5a, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x39, 0xea, 0xde, 0x1f, 0x15, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0xf2, 0xde, 0x1f, 0x1c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a,
	0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xea,
	0xde, 0x1f, 0x10, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x06,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x35, 0xea, 0xde, 0x1f, 0x13, 0x64,
	0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x69, 0x73, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x64, 0x12, 0x7b, 0x0a, 0x07, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x35, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde,
	0x1f, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x18, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x7d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x42, 0x3f, 0xc8, 0xde, 0x1f, 0x01, 0xea,
	0xde, 0x1f, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x1d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x6c,
	0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42,
	0x3e, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x16, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0xf2,
	0xde, 0x1f, 0x1c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x88, 0x01, 0x0a,
	0x0c, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x76, 0x6f, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x3f, 0xc8, 0xde, 0x1f, 0x00, 0xea,
	0xde, 0x1f, 0x16, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x1d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x68, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x6c, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x15, 0xea, 0xde, 0x1f, 0x03, 0x61, 0x63, 0x63, 0xf2, 0xde, 0x1f, 0x0a, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x63, 0x63, 0x22, 0x52, 0x03, 0x61, 0x63, 0x63, 0x12, 0x27,
	0x0a, 0x03, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x15, 0xea, 0xde, 0x1f,
	0x03, 0x61, 0x6e, 0x73, 0xf2, 0xde, 0x1f, 0x0a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x6e,
	0x73, 0x22, 0x52, 0x03, 0x61, 0x6e, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f,
	0x00, 0x42, 0xd7, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65,
	0x2e, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x62,
	0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6e,
	0x33, 0x64, 0x2f, 0x61, 0x78, 0x6d, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x3b, 0x76, 0x6f, 0x74, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2,
	0x02, 0x03, 0x41, 0x56, 0x58, 0xaa, 0x02, 0x13, 0x41, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x13, 0x41, 0x78,
	0x69, 0x6f, 0x6d, 0x65, 0x5c, 0x56, 0x6f, 0x74, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0xe2, 0x02, 0x1f, 0x41, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x5c, 0x56, 0x6f, 0x74, 0x65, 0x5c,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x41, 0x78, 0x69, 0x6f, 0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x6f,
	0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_axiome_vote_v1beta1_genesis_proto_rawDescOnce sync.Once
	file_axiome_vote_v1beta1_genesis_proto_rawDescData = file_axiome_vote_v1beta1_genesis_proto_rawDesc
)

func file_axiome_vote_v1beta1_genesis_proto_rawDescGZIP() []byte {
	file_axiome_vote_v1beta1_genesis_proto_rawDescOnce.Do(func() {
		file_axiome_vote_v1beta1_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_axiome_vote_v1beta1_genesis_proto_rawDescData)
	})
	return file_axiome_vote_v1beta1_genesis_proto_rawDescData
}

var file_axiome_vote_v1beta1_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_axiome_vote_v1beta1_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),          // 0: axiome.vote.v1beta1.GenesisState
	(*PollAnswer)(nil),            // 1: axiome.vote.v1beta1.PollAnswer
	(*Params)(nil),                // 2: axiome.vote.v1beta1.Params
	(*Proposal)(nil),              // 3: axiome.vote.v1beta1.Proposal
	(*ProposalHistoryRecord)(nil), // 4: axiome.vote.v1beta1.ProposalHistoryRecord
	(*Poll)(nil),                  // 5: axiome.vote.v1beta1.Poll
	(*PollHistoryItem)(nil),       // 6: axiome.vote.v1beta1.PollHistoryItem
}
var file_axiome_vote_v1beta1_genesis_proto_depIdxs = []int32{
	2, // 0: axiome.vote.v1beta1.GenesisState.params:type_name -> axiome.vote.v1beta1.Params
	3, // 1: axiome.vote.v1beta1.GenesisState.current_proposal:type_name -> axiome.vote.v1beta1.Proposal
	4, // 2: axiome.vote.v1beta1.GenesisState.history:type_name -> axiome.vote.v1beta1.ProposalHistoryRecord
	5, // 3: axiome.vote.v1beta1.GenesisState.current_poll:type_name -> axiome.vote.v1beta1.Poll
	1, // 4: axiome.vote.v1beta1.GenesisState.poll_answers:type_name -> axiome.vote.v1beta1.PollAnswer
	6, // 5: axiome.vote.v1beta1.GenesisState.poll_history:type_name -> axiome.vote.v1beta1.PollHistoryItem
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_axiome_vote_v1beta1_genesis_proto_init() }
func file_axiome_vote_v1beta1_genesis_proto_init() {
	if File_axiome_vote_v1beta1_genesis_proto != nil {
		return
	}
	file_axiome_vote_v1beta1_params_proto_init()
	file_axiome_vote_v1beta1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_axiome_vote_v1beta1_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_axiome_vote_v1beta1_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_axiome_vote_v1beta1_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_axiome_vote_v1beta1_genesis_proto_goTypes,
		DependencyIndexes: file_axiome_vote_v1beta1_genesis_proto_depIdxs,
		MessageInfos:      file_axiome_vote_v1beta1_genesis_proto_msgTypes,
	}.Build()
	File_axiome_vote_v1beta1_genesis_proto = out.File
	file_axiome_vote_v1beta1_genesis_proto_rawDesc = nil
	file_axiome_vote_v1beta1_genesis_proto_goTypes = nil
	file_axiome_vote_v1beta1_genesis_proto_depIdxs = nil
}
